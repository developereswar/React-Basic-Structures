{"version":3,"sources":["action/actionType.js","reducer/app.reducer.js","Store.js","_component/PrivateRoute.js","ui_modules/Header.js","common/API.js","action/app.action.js","ui_modules/Breadcrum.js","pages/Dashboard.js","pages/Addcustomer.js","common/DataTable.js","pages/CustomerList.js","pages/Login.js","pages/EditStages.js","pages/AddWorker.js","_global/Paths.js","ui_modules/Sidebar.js","_layout/Layout.js","App/route.js","App/App.js","index.js"],"names":["AppState","productTypes","name","id","combiner","combineReducers","appReducer","state","action","type","customerList","payload","userDetails","store","createStore","applyMiddleware","ReduxThunk","PrivateRoute","Component","component","rest","className","render","props","localStorage","getItem","to","pathname","from","location","Headers","isToken","useHistory","Navbar","expand","Toggle","aria-controls","Collapse","Nav","Link","Host","URL","header","headers","getCustomer","dispatch","Axios","get","customerLists","then","res","data","catch","err","login","e","post","registerWorker","BreadcrumbModule","lastItem","window","href","substring","lastIndexOf","Breadcrumb","Item","customStyles","headCells","style","background","color","cursor","columns","selector","sortable","DashboardComponent","constructor","super","viewPage","this","history","push","componentDidMount","prevProps","prevState","componentDidUpdate","Container","fluid","Row","Col","onClick","icon","faUserPlus","size","faUserEdit","faClipboard","Card","pagination","paginationPerPage","paginationRowsPerPageOptions","connect","console","log","product","bindActionCreators","useState","selecedProdType","SetSelectedProdType","Form","Group","as","controlId","sm","Control","placeholder","options","label","value","onChange","labelledBy","length","map","isToggle","setIsToggle","setCustomerList","setSelectedRow","useEffect","ExpandableComponent","Label","email","mobile","onSelectedRowsChange","selectedRows","expandableRows","expandableRowsComponent","LoginComponent","renderRedirect","meta","output","message","setItem","token","setState","isLoggedIn","checkStorage","storage","fields","error","nextProps","checkPagePath","clear","xs","lg","initialValues","username","password","validationSchema","Yup","shape","required","onSubmit","errors","status","touched","htmlFor","Button","variant","block","EditStagesComponents","md","pathList","path","faTachometerAlt","hideMenu","AddCustomerComponent","faPlus","CustomerListComponent","faList","faSignOutAlt","role","AddWorkerComponent","menuList","faCodeBranch","faPlusCircle","src","alt","i","key","Layout","compList","exact","AppRoute","App","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.bdf21618.chunk.js","sourcesContent":["export const PRODUCT_CATEGORIES = 'PRODUCT_CATEGORIES';\nexport const GET_CUSTOMERS = 'GET_CUSTOMERS';\nexport const IS_LOGIN = 'IS_LOGIN';\nexport const ADD_WORKER = \"ADD_WORKER\";","import { GET_CUSTOMERS, PRODUCT_CATEGORIES, IS_LOGIN } from '../action/actionType'\n\nconst AppState = {\n  productTypes: [{name: 'Sofa', id: 1},{name: 'Table', id: 2}, {name: 'Chari', id: 3}]\n}\n\n\nexport const appReducer = (state = AppState, action) => {\n  switch (action.type) {\n    case GET_CUSTOMERS:\n      state.customerList = [...action.payload];\n      return {...state};\n      case IS_LOGIN:\n        state.userDetails = {...action.payload};\n        return {...state};\n    case PRODUCT_CATEGORIES:\n      return {...state};\n    default:\n      return {...state};\n  }\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport ReduxThunk from \"redux-thunk\";\nimport {  appReducer } from \"./reducer/app.reducer\";\nconst combiner = combineReducers({\n    appReducer: appReducer\n});\nexport const store = createStore(combiner, applyMiddleware(ReduxThunk));","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <div className=\"App\">\n    <Route {...rest} render={props => (\n        localStorage.getItem('accessToken')\n            ? <Component {...props} />\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    )} />\n    </div>\n)","import React from \"react\";\nimport { Navbar, NavDropdown, Nav } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport  function Headers() {\n  let isToken = localStorage.getItem(\"accessToken\");\n  let history = useHistory();\n  // To Logout\n  const logout = ()=> {\n    // isToken= null;\n    // history.push('/login');\n  }\n\n \n\n  return (\n   isToken && <Navbar expand=\"lg\" className=\"bg_blue\">\n      {/* <Navbar.Brand href=\"#home\">SoFa</Navbar.Brand> */}\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n        <Nav>\n       <Nav.Link >My Profile</Nav.Link> \n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","const Host = 'http://localhost:8080/api/v1';\nexport const URL ={\n        \"login\" : `${Host}/login`,\n        \"registerWorker\":`${Host}/register`,\n        'customerLists': `${Host}/customer_lists`\n    }\n\n","import Axios from 'axios';\nimport { GET_CUSTOMERS, IS_LOGIN, ADD_WORKER } from './actionType';\nimport { URL } from \"../common/API\";\n\nconst header =   { headers: { 'Content-Type' : 'application/json; charset=utf-8', 'Accept': 'application/json'} };\n\nexport const getCustomer = () => {\n    return dispatch => {\n        Axios.get(URL.customerLists)\n        .then(res => {\n            dispatch({\n              type: GET_CUSTOMERS,\n              payload: res.data\n            });\n          })\n          .catch(err => {\n              dispatch({\n                type: GET_CUSTOMERS,\n                payload: {\"error\":\"Error Connection\"}\n              });\n          });\n    }\n}\n\nexport const login = (e) => {\n  return dispatch => {\n      Axios.post(URL.login, e, header )\n      .then(res => {\n          dispatch({\n            type: IS_LOGIN,\n            payload: res.data\n          });\n        })\n        .catch(err => {\n            dispatch({\n              type: IS_LOGIN,\n              payload: {\"error\":\"Error Connection\"}\n            });\n        });\n  }\n}\n\n\nexport const registerWorker = (e) => {\n  return dispatch => {\n      Axios.post(URL.registerWorker, e, header )\n      .then(res => {\n          dispatch({\n            type: ADD_WORKER,\n            payload: res.data\n          });\n        })\n        .catch(err => {\n            dispatch({\n              type: ADD_WORKER,\n              payload: {\"error\":\"Error Connection\"}\n            });\n        });\n  }\n}","import React, { Component } from \"react\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nexport const BreadcrumbModule = (props) => {\n    const lastItem = window.location.href.substring(window.location.href.lastIndexOf('/') + 1)\n    return (\n        <Breadcrumb>\n            <Breadcrumb.Item>\n              <Link to=\"/dashboard\">Home</Link> \n            </Breadcrumb.Item>\n            { 'home' !== lastItem && <Breadcrumb.Item >\n                  <Link className=\"text-capitalize\" to={lastItem}>{lastItem}</Link> \n            </Breadcrumb.Item> }\n        </Breadcrumb>\n    )\n}\n","import React, { Component } from \"react\";\nimport { Container, Row,  Card, Col, Table} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { getCustomer } from '../action/app.action'\nimport { bindActionCreators } from \"redux\";\nimport {BreadcrumbModule} from '../ui_modules/Breadcrum';\nimport { faUserPlus, faUserEdit, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport DataTable from 'react-data-table-component';\n\n\nimport { Layout } from \"../_layout/Layout\";\n\nimport { useHistory } from \"react-router-dom\";\nconst customStyles = {\n   \n    headCells: {\n      style: {\n        background: '#333',\n        color: '#fff',\n        '&:hover': {\n            cursor: 'pointer',\n            color: '#fff'\n          }\n      },\n    }\n}\n\nconst columns = [\n    {\n        name: 'Name',\n        selector: 'name',\n        sortable: true,\n      },\n      {\n        name: 'Email',\n        selector:'email',\n        sortable: true\n      },\n       {\n    name: 'Mobile',\n    selector: 'mobile',\n    sortable: true,\n  },\n  {\n    name: 'Status',\n    selector: 'status',\n    sortable: true\n  },\n]\n\nclass DashboardComponent extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            customerList:[]\n        }\n    }\n    componentDidMount(prevProps, prevState){\n       this.props.getCustomer();\n    }\n\n    componentDidUpdate(prevProps){\n        \n    }\n\n    viewPage = (e) => {\n        if(e){\n            this.props.history.push(e)\n        }\n    }\n\n \n    render(){\n        const {customerList} = this.props;\n      return (\n        <Container fluid>\n            <section className=\"content-header\">\n                <Row>\n                    <Col className=\"p-3\">\n                        <h3 className=\"text-left\">\n                            Add Customer\n                        </h3>\n                       <BreadcrumbModule></BreadcrumbModule>\n                    </Col>\n                </Row>\n            </section>\n            <Row className=\"mt-3\">\n                <div className=\"widget_board\"  onClick={() => this.viewPage(\"/dashboard/add-customer\")}>\n                    <div className=\"widget_row\">\n                        <div className=\"img_block  bg_red\">\n                            <FontAwesomeIcon icon={faUserPlus} size=\"6x\"/>\n                        </div>\n                        <div className=\"content_block\">\n                            <h3 className='wid-board-name'>Add Customer</h3>\n                        </div>  \n                    </div>\n                </div>\n\n                <div className=\"widget_board \">\n                    <div className=\"widget_row\">\n                        <div className=\"img_block bg_blue\">\n                             <FontAwesomeIcon icon={faUserEdit} size=\"6x\"/>\n                        </div>\n                        <div className=\"content_block\">\n                            <h3 className='wid-board-name'>Edit Customer</h3>\n                        </div>  \n                    </div>\n                </div>\n\n                <div className=\"widget_board\"   onClick={() =>this.viewPage(\"/dashboard/customer-list\")}>\n                    <div className=\"widget_row\">\n                        <div className=\"img_block bg_green\">\n                        <FontAwesomeIcon icon={faClipboard} size=\"6x\"/>\n                        </div>\n                        <div className=\"content_block\">\n                            <h3 className='wid-board-name'> Customer Status</h3>\n                        </div>  \n                    </div>\n                </div>\n              \n            </Row>\n            <Row className=\"mt-4\">\n                <Col>\n                <Card className=\"box\">\n                <h3>\n                Customer Lists\n            </h3>\n            <DataTable\n            columns={columns}\n            data={customerList}\n            customStyles={customStyles}\n            pagination= {true}\n            paginationPerPage={5}\n            paginationRowsPerPageOptions={ [5, 10, 15, 20, 25, 30]}\n          />\n              \n            </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state.appReducer.customerList)\n    return{\n    product: state.appReducer,\n    customerList:state.appReducer.customerList\n  };\n};\n  \n\nconst mapDispatchToState = dispatch => {\n    return bindActionCreators({\n        getCustomer: getCustomer\n    }, dispatch)\n}\nexport default connect(mapStateToProps, mapDispatchToState)(DashboardComponent);","import React, { useEffect, useState } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { getCustomer } from \"../action/app.action\";\nimport { connect } from \"react-redux\";\n// import { Multiselect } from \"multiselect-react-dropdown\";\nimport MultiSelect from \"react-multi-select-component\";\nimport {\n  Form,\n  Row,\n  Col,\n  InputGroup,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport {\n  faUserPlus,\n  faUserEdit,\n  faClipboard,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { BreadcrumbModule } from \"../ui_modules/Breadcrum\";\n\nconst AddCustomerComponent = (props) => {\n  const [selecedProdType, SetSelectedProdType] = useState([]);\n\n  const options = [\n    { label: \"Sofa\", value: \"sofa\" },\n    { label: \"Chair\", value: \"chair\" },\n  ];\n\n  const onselectProd = (params) => {\n    SetSelectedProdType(params);\n  };\n\n  const onRemoveProd = (params) => {\n    if (selecedProdType.length === 1) {\n      SetSelectedProdType([]);\n    } else {\n      const index = selecedProdType.indexOf(params[0]);\n      let selectedData = selecedProdType.splice(index, 1);\n      SetSelectedProdType(selectedData);\n    }\n  };\n\n  // useEffect(() => {\n\n  // }, [SetSelectedProdType])\n  return (\n    <div className=\"content-wrapper\">\n      <section className=\"content-header\">\n        <Row>\n          <Col className=\"p-3\">\n            <h3 className=\"text-left\">Add Customer</h3>\n            <BreadcrumbModule></BreadcrumbModule>\n          </Col>\n        </Row>\n      </section>\n\n      <Form>\n        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n          <Col sm=\"12\" className=\"mt-3 mb-3\">\n            <h4 className=\"text-left\">Customer Details</h4>\n          </Col>\n          <Col sm={4}>\n            <Form.Control type=\"text\" placeholder=\"Customer Name\" />\n          </Col>\n\n          <Col sm={4}>\n            <Form.Control type=\"text\" placeholder=\"Customer Contact Number\" />\n          </Col>\n\n          <Col sm={4}>\n            <Form.Control type=\"text\" placeholder=\"Order Number\" />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n          <Col sm={4}>\n            <MultiSelect\n              options={options}\n              value={selecedProdType}\n              onChange={SetSelectedProdType}\n              labelledBy={\"Select Products\"}\n            />\n          </Col>\n        </Form.Group>\n\n        {selecedProdType.length !== 0 &&\n          selecedProdType.map((data) => {\n            return (\n              <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                <Col sm=\"12\" className=\"mt-3 mb-3\">\n                  <h4 className=\"text-left\">Product Details</h4>\n                </Col>\n                <Col sm={2}>\n                  <b>{data.name}</b>\n                </Col>\n                <Col sm={4}>\n                  <Form.Control as=\"select\" size=\"sm\">\n                    <option>Elizabeth</option>\n                    <option>Elizabeth</option>\n                    <option>Elizabeth</option>\n                  </Form.Control>\n                </Col>\n                <Col sm={12}>\n                  <ul className=\"productLists\">\n                    <li>\n                      <input type=\"radio\" name=\"test\" value=\"test\" /> Test\n                    </li>\n                    <li>\n                      <input type=\"radio\" name=\"test\" value=\"test\" /> Test\n                    </li>\n\n                    <li>\n                      <input type=\"radio\" name=\"test\" value=\"test\" /> Test\n                    </li>\n                    <li>\n                      <input type=\"radio\" name=\"test\" value=\"test\" /> Test\n                    </li>\n                  </ul>\n                </Col>\n              </Form.Group>\n            );\n          })}\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state.appReducer,\n  };\n};\n\n// const mapDispatchToState = dispatch => {\n//     return bindActionCreators({\n//         getCustomer: getCustomer\n//     }, dispatch)\n// }\nexport default connect(mapStateToProps, null)(AddCustomerComponent);\n","export const customStyles = {\r\n    headCells: {\r\n      style: {\r\n        background: '#333',\r\n        color: '#fff',\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: '#fff'\r\n          }\r\n      },\r\n    }\r\n}\r\n\r\nexport const columns = [\r\n \r\n \r\n  {\r\n    name: 'Name',\r\n    selector:'name',\r\n    sortable: true\r\n  },\r\n      {\r\n        name: 'Email',\r\n        selector:'email',\r\n        sortable: true\r\n      },\r\n       {\r\n    name: 'Mobile',\r\n    selector: 'mobile',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Status',\r\n    selector: 'status',\r\n    sortable: true\r\n  }\r\n\r\n]\r\n// onRowExpandToggled={(toggleState,row)=>{\r\n  // console.log(row)\r\n// }}","import React, { useState, useEffect } from \"react\";\nimport { BreadcrumbModule } from \"../ui_modules/Breadcrum\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { columns, customStyles } from \"../common/DataTable\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getCustomer } from \"../action/app.action\";\nimport { Fragment } from \"react\";\n\nconst CustomerListComponent = (props) => {\n  const [isToggle, setIsToggle] = useState(false);\n  const [customerList, setCustomerList] = useState([]);\n  const [selectedRow, setSelectedRow] = useState({});\n\n  useEffect(() => {\n    setCustomerList(props.product.customerList);\n  }, []);\n\n  const handleChange = (e) => {\n    setSelectedRow({ ...e.selectedRows[0] });\n    setIsToggle(!isToggle);\n  };\n\n  const ExpandableComponent = ({ data }) => {\n    return (\n      <Fragment>\n      <Form className=\"editableForm mt-2 mb-2\">\n        <Form.Group as={Row} >\n          <Col sm={4} className=\"text-left\">\n          <Form.Label>Name :</Form.Label>\n            <Form.Control type=\"text\" value={data.name} />\n          </Col>\n          <Col sm={4} className=\"text-left\">\n          <Form.Label>Email Id :</Form.Label>\n            <Form.Control type=\"text\" value={data.email} />\n          </Col>\n          <Col sm={4} className=\"text-left\">\n          <Form.Label>Mobile No :</Form.Label>\n            <Form.Control type=\"text\" value={data.mobile} />\n          </Col>\n          </Form.Group>\n        </Form>\n      </Fragment>\n    );\n  };\n\n  return (\n    <div className=\"content-wrapper\">\n      <section className=\"content-header\">\n        <Row>\n          <Col className=\"p-3\">\n            <h3 className=\"text-left\">Add Customer</h3>\n            <BreadcrumbModule></BreadcrumbModule>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"p-3\">\n            <DataTable\n              columns={columns}\n              data={customerList}\n              customStyles={customStyles}\n              pagination={true}\n              paginationPerPage={10}\n              paginationRowsPerPageOptions={[5, 10, 15, 20, 25, 30]}\n              onSelectedRowsChange={handleChange}\n              expandableRows\n              expandableRowsComponent={<ExpandableComponent />}\n            />\n          </Col>\n        </Row>\n      </section>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    product: state.appReducer,\n    customerList: state.appReducer.customerList,\n  };\n};\n\nconst mapDispatchToState = (dispatch) => {\n  return bindActionCreators(\n    {\n      getCustomer: getCustomer,\n    },\n    dispatch\n  );\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToState\n)(CustomerListComponent);\n","import React from \"react\";\nimport { Component } from \"react\";\nimport * as Yup from \"yup\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { login } from '../action/app.action';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      error: \"\"\n    };\n    // this.props.logOut();\n  }\n\n\n  // getCookie(key) {\n  //   var b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\n  //   return b ? b.pop() : null;\n  // }\n\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n\n    if (nextProps.product && (nextProps.product['message'] !== prevState.error)) {\n      return {\n        error: nextProps.product['message']\n      }\n    }\n    return null\n  }\n\n  componentDidMount() {\n    this.checkPagePath();\n  }\n  \n\n  componentDidUpdate() {\n    this.renderRedirect();\n  }\n\n  checkPagePath(){\n    if(window.location.pathname === '/logout'){\n      localStorage.clear();\n      window.location.pathname = '/login'\n    }\n  }\n\n  renderRedirect = () => {\n    let{ meta, output } = this.props.product.userDetails;\n    if (meta.message === 'success') {\n      localStorage.setItem('accessToken', output.token);\n      this.setState({isLoggedIn: true})\n    } else {\n      return <Redirect to=\"/\" />\n    }\n  };\n\n  checkStorage = ()=>{\n    let storage = localStorage.getItem('accessToken');\n    if(storage){ this.setState({isLoggedIn: true}); }\n    return storage && <Redirect to=\"/\" />  \n  }\n\n  login = fields => {\n    this.props.login(fields);\n  };\n  render() {\n    const{ isLoggedIn } = this.state;\n    return (\n      <Container>\n        {isLoggedIn && this.checkStorage()}\n        <Row className=\"justify-content-md-center rows\">\n          <div id=\"formContent\">\n            <Col xs=\"12\" lg=\"12\">\n              <h2 className=\"text-center\">\n                Login\n                </h2>\n              <hr />\n            </Col>\n            <Col xs=\"12\" lg=\"12\">\n              <Formik\n                className=\"loginForm\"\n                initialValues={{\n                  username: \"\",\n                  password: \"\"\n                }}\n                validationSchema={Yup.object().shape({\n                  username: Yup.string()\n                    .required(\"usernameis required\")\n                    .required(\"username is required\"),\n                  password: Yup.string()\n                    .required(\"Password is required\")\n                })}\n                onSubmit={fields => {\n                  this.login(fields);\n                }}\n                render={({ errors, status, touched }) => (\n                  <Form >\n                    <div className=\"form-group\">\n                      <label htmlFor=\"username\"> Username </label>{\" \"}\n                      <Field\n                        name=\"username\"\n                        type=\"text\"\n                        className={\n                          \"form-control\" +\n                          (errors.username && touched.username\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                      />{\" \"}\n                      <ErrorMessage\n                        name=\"username\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\"> Password </label>{\" \"}\n                      <Field\n                        name=\"password\"\n                        type=\"password\"\n                        className={\n                          \"form-control\" +\n                          (errors.password && touched.password\n                            ? \" is-invalid\"\n                            : \"\")\n                        }\n                      />{\" \"}\n                      <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <Button type=\"submit\" variant=\"primary\" size=\"lg\" block>\n                        {\" \"}\n                          Login{\" \"}\n                      </Button>{\" \"}\n                      <p className=\"error\"> {this.state.error ? this.state.error : null} </p>\n                    </div>\n                  </Form>\n                )}\n              />\n            </Col>{\" \"}\n          </div>\n        </Row>{\" \"}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    product: state.appReducer\n  };\n};\n\n\nconst mapDispatchToState = dispatch => {\n  return bindActionCreators({\n    login: login\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(LoginComponent);","import React from \"react\";\r\nimport { BreadcrumbModule } from \"../ui_modules/Breadcrum\";\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nconst EditStagesComponents = () => {\r\n  return (\r\n    <div className=\"content-wrapper\">\r\n      <section className=\"content-header\">\r\n        <Row>\r\n          <Col className=\"p-3\">\r\n            <h3 className=\"text-left\">Edit Stages</h3>\r\n            <BreadcrumbModule></BreadcrumbModule>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Form>\r\n            <Form.Group></Form.Group>\r\n          </Form>\r\n        </Row>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditStagesComponents;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { registerWorker } from \"../action/app.action\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Form,\r\n    Row,\r\n    Col,\r\n    InputGroup,\r\n    FormControl,\r\n    Button,\r\n} from \"react-bootstrap\";\r\n\r\nimport { BreadcrumbModule } from \"../ui_modules/Breadcrum\";\r\n\r\n\r\nconst AddWorkerComponent = (props) => {\r\n\r\n    useEffect(() => { }, []);\r\n\r\n    return (\r\n        <div className=\"content-wrapper\">\r\n            <section className=\"content-header\">\r\n                <Row>\r\n                    <Col className=\"p-3\">\r\n                        <h3 className=\"text-left\">Add Worker</h3>\r\n                        <BreadcrumbModule></BreadcrumbModule>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm=\"6\" md=\"6\">\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter name\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Role</Form.Label>\r\n                                <Form.Control as=\"select\" size=\"lg\">\r\n                                    <option value=\"admin\">Admin</option>\r\n                                    <option value=\"worker\">Worker</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                             </Button>\r\n                        </Form>\r\n                    </Col>\r\n\r\n                    <Col sm=\"6\" md=\"6\">\r\n\r\n                    </Col>\r\n                </Row>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.appReducer,\r\n    };\r\n};\r\n\r\nconst mapDispatchToState = dispatch => {\r\n    return bindActionCreators({\r\n        registerWorker: registerWorker\r\n    }, dispatch)\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToState)(AddWorkerComponent);","import  DashboardComponent from '../pages/Dashboard';\nimport  AddCustomerComponent from '../pages/Addcustomer';\nimport CustomerListComponent from '../pages/CustomerList';\nimport LoginComponent from '../pages/Login';\nimport EditStagesComponents from '../pages/EditStages';\nimport AddWorkerComponent from '../pages/AddWorker';\n\nimport { faTachometerAlt, faPlus, faList, faSignOutAlt, faCodeBranch, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nexport const pathList = [\n    {\n      path:'/',\n      component: DashboardComponent,\n      name: 'Dashboard',\n      icon: faTachometerAlt,\n      hideMenu:true,\n    },\n    {\n      path:'/dashboard',\n      component: DashboardComponent,\n      name: 'Dashboard',\n      icon: faTachometerAlt,\n      hideMenu:false\n    },\n    {\n      path: '/dashboard/add-customer',\n      component: AddCustomerComponent,\n      name: 'Add Customer',\n      icon: faPlus,\n      hideMenu:false\n    },\n    {\n      path: '/dashboard/customer-list',\n      component: CustomerListComponent,\n      name: 'Customer List',\n      icon: faList,\n      hideMenu:false\n    },\n    {\n      path: '/update-stages',\n      component: EditStagesComponents,\n      name: 'Update Stages',\n      icon: faSignOutAlt,\n      hideMenu:false,\n      role:'admin'\n    },\n\n    {\n      path: '/add-worker',\n      component: AddWorkerComponent,\n      name: 'Add Worker',\n      icon: faSignOutAlt,\n      hideMenu:false,\n      role:'admin'\n    },\n    {\n      path: '/logout',\n      component: LoginComponent,\n      name: 'LogOut',\n      icon: faSignOutAlt,\n      hideMenu:false\n    }\n  ];  \n\n\n  export const menuList = [\n    {\n      path:'/dashboard',\n      name: 'Dashboard',\n      icon: faTachometerAlt,\n      role: 'worker'\n    },\n    {\n      path: '/dashboard/add-customer',\n      component: AddCustomerComponent,\n      name: 'Add Customer',\n      icon: faPlus,\n      role: 'worker'\n    },\n    {\n      path: '/dashboard/customer-list',\n      component: CustomerListComponent,\n      name: 'Customer List',\n      icon: faList,\n      role: 'worker'\n    },\n    {\n      path: '/update-stages',\n      component: EditStagesComponents,\n      name: 'Update Stages',\n      icon: faCodeBranch,\n      role:'admin'\n    },\n    {\n      path: '/add-worker',\n      component: AddWorkerComponent,\n      name: 'Add Worker',\n      icon: faPlusCircle,\n      role:'admin'\n    },\n    {\n      path: '/logout',\n      component: LoginComponent,\n      name: 'LogOut',\n      icon: faSignOutAlt,\n      role: 'worker'\n    }\n  ];  ","import React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport {menuList } from '../_global/Paths';\nimport { bindActionCreators } from \"redux\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from \"react-redux\";\n\nconst SideBarComponent = (props) => {\n    const role = localStorage.getItem('role');\n    const username = localStorage.getItem('username');\n    useEffect(()=>{\n        if(props.userDetails){\n             localStorage.setItem('username', props.userDetails.output.username);\n             localStorage.setItem('role', props.userDetails.output.role);\n            }\n    },[])\n\n  \n    return (\n        <div className=\"sidebar\">\n            <div className=\"user-panel\">\n                <div className=\"pull-left image\">\n                    <img src=\"http://via.placeholder.com/160x160\" className=\"rounded-circle\" alt=\"User Image\" />\n                </div>\n                <div className=\"pull-left info\">\n                    <Link to=\"/\"><i className=\"fa fa-circle text-success\"></i> <h4 className=\"userName\"> {username} </h4></Link>\n                </div>\n            </div>\n            <ul className=\"list-sidebar bg-default\">\n           \n                {\n                    \n                    menuList.map((e, i) => {\n                            console.log(e.role === role, role)\n                                if(role === 'admin' && e.role === 'worker') { return ( <li key={i}>\n                                    <Link to={{ pathname: e.path }}>  <span> <FontAwesomeIcon icon={e.icon} />  </span>\n                                  {e.name} </Link>\n                                </li>)}else if(role === e.role) {\n                                    return(<li key={i}>\n                                        <Link to={{ pathname: e.path }}>  <span> <FontAwesomeIcon icon={e.icon} />  </span>  {e.name} </Link>\n                                    </li>)\n                                } \n                            })\n                }\n\n            </ul>\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = state => {\n    return {\n        ...state.appReducer\n    };\n};\n\n\nconst mapDispatchToState = dispatch => {\n    return bindActionCreators({\n    }, dispatch)\n}\nexport default connect(mapStateToProps, mapDispatchToState)(SideBarComponent);","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// ui module\nimport { Headers } from '../ui_modules/Header';\nimport SideBarComponent  from '../ui_modules/Sidebar';\n\n// path list\nimport { pathList } from '../_global/Paths'\n\nexport const Layout =  () => {\n  return(\n    <>\n      <Router>\n      <Headers/>\n      <SideBarComponent/>\n      <Switch>\n        {\n          pathList.map(compList => {\n            return ( <Route path={compList.path} component={compList.component} exact />)\n          })\n        }\n      </Switch>\n          \n    </Router>\n    </>\n  )\n}","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\n\n\nimport { PrivateRoute } from '../_component/PrivateRoute'\n// Pages\nimport {Layout} from '../_layout/Layout';\nimport LoginComponent from '../pages/Login';\n\nexport const AppRoute = (props) => {\n  return (\n    <Router>\n      <PrivateRoute path='/' component={Layout} exact />\n      <Route path=\"/login\" exact component={LoginComponent} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Router>\n  );\n};","import React from \"react\";\nimport \"../styles.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Provider } from 'react-redux';\nimport { store } from '../Store';\n// Layout for App\nimport { AppRoute } from './route';\n\nexport const App = () => {\n  return (\n    <Provider store={store}>\n      <AppRoute></AppRoute>\n    </Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App/index\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <App />, rootElement\n);\n"],"sourceRoot":""}