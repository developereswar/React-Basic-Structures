{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\eswar\\\\Documents\\\\projects\\\\Customer ui\\\\UI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport Axios from 'axios';\nimport { GET_CUSTOMERS, IS_LOGIN } from './actionType';\nimport { URL } from \"../common/API\";\nvar header = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n};\nexport var getCustomer = function getCustomer() {\n  return function (dispatch) {\n    Axios.get(URL.customerLists).then(function (res) {\n      dispatch({\n        type: GET_CUSTOMERS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_CUSTOMERS,\n        payload: {\n          \"error\": \"Error Connection\"\n        }\n      });\n    });\n  };\n};\nexport var login = function login(e) {\n  var _useCookies = useCookies(),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      cookies = _useCookies2[0],\n      setCookie = _useCookies2[1];\n\n  return function (dispatch) {\n    Axios.post(URL.login, e, header).then(function (res) {\n      console.log(cookies.get('accessToken'));\n      dispatch({\n        type: IS_LOGIN,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: IS_LOGIN,\n        payload: {\n          \"error\": \"Error Connection\"\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/eswar/Documents/projects/Customer ui/UI/src/action/app.action.js"],"names":["Axios","GET_CUSTOMERS","IS_LOGIN","URL","header","headers","getCustomer","dispatch","get","customerLists","then","res","type","payload","data","catch","err","login","e","useCookies","cookies","setCookie","post","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,cAAxC;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,IAAMC,MAAM,GAAK;AAAEC,EAAAA,OAAO,EAAE;AAAE,oBAAiB,kBAAnB;AAAuC,cAAU;AAAjD;AAAX,CAAjB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,SAAO,UAAAC,QAAQ,EAAI;AACfP,IAAAA,KAAK,CAACQ,GAAN,CAAUL,GAAG,CAACM,aAAd,EACCC,IADD,CACM,UAAAC,GAAG,EAAI;AACTJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEX,aADC;AAEPY,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,OAAD,CAAR;AAID,KANH,EAOGC,KAPH,CAOS,UAAAC,GAAG,EAAI;AACVT,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEX,aADC;AAEPY,QAAAA,OAAO,EAAE;AAAC,mBAAQ;AAAT;AAFF,OAAD,CAAR;AAIH,KAZH;AAaH,GAdD;AAeH,CAhBM;AAkBP,OAAO,IAAMI,KAAK,GAAG,SAARA,KAAQ,CAACC,CAAD,EAAO;AAAA,oBACGC,UAAU,EADb;AAAA;AAAA,MACnBC,OADmB;AAAA,MACVC,SADU;;AAE1B,SAAO,UAAAd,QAAQ,EAAI;AACfP,IAAAA,KAAK,CAACsB,IAAN,CAAWnB,GAAG,CAACc,KAAf,EAAsBC,CAAtB,EAAyBd,MAAzB,EACCM,IADD,CACM,UAAAC,GAAG,EAAI;AACXY,MAAAA,OAAO,CAACC,GAAR,CAAaJ,OAAO,CAACZ,GAAR,CAAY,aAAZ,CAAb;AACED,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEV,QADC;AAEPW,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAAAC,GAAG,EAAI;AACVT,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEV,QADC;AAEPW,QAAAA,OAAO,EAAE;AAAC,mBAAQ;AAAT;AAFF,OAAD,CAAR;AAIH,KAbH;AAcH,GAfD;AAgBD,CAlBM","sourcesContent":["import Axios from 'axios';\r\nimport { GET_CUSTOMERS, IS_LOGIN } from './actionType';\r\nimport { URL } from \"../common/API\";\r\n\r\nconst header =   { headers: { 'Content-Type' : 'application/json', 'Accept': 'application/json'  } };\r\n\r\nexport const getCustomer = () => {\r\n    return dispatch => {\r\n        Axios.get(URL.customerLists)\r\n        .then(res => {\r\n            dispatch({\r\n              type: GET_CUSTOMERS,\r\n              payload: res.data\r\n            });\r\n          })\r\n          .catch(err => {\r\n              dispatch({\r\n                type: GET_CUSTOMERS,\r\n                payload: {\"error\":\"Error Connection\"}\r\n              });\r\n          });\r\n    }\r\n}\r\n\r\nexport const login = (e) => {\r\n  const [cookies, setCookie] = useCookies();\r\n  return dispatch => {\r\n      Axios.post(URL.login, e, header )\r\n      .then(res => {\r\n        console.log( cookies.get('accessToken'));\r\n          dispatch({\r\n            type: IS_LOGIN,\r\n            payload: res.data\r\n          });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n              type: IS_LOGIN,\r\n              payload: {\"error\":\"Error Connection\"}\r\n            });\r\n        });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}